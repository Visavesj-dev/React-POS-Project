{"version":3,"sources":["constants/index.js","utils/HttpClient.js","actions/login.action.js","components/layouts/Header.js","components/layouts/Menu.js","reducers/login.reducer.js","components/pages/LoginPage/LoginPage.js","actions/register.action.js","components/pages/RegisterPage/RegisterPage.js","models/transaction.js","actions/shop.action.js","components/fragments/Payment/Payment.js","actions/stock.action.js","components/pages/ShopPage/ShopPage.js","components/fragments/StockCard/StockCard.js","components/pages/StockPage/StockPage.js","components/pages/StockCreatePage/StockCreatePage.js","components/pages/StockEditPage/StockEditPage.js","components/pages/ReportPage/ReportPage.js","components/pages/TransactionPage/TransactionPage.js","actions/transaction.action.js","App.js","serviceWorker.js","reducers/stock.reducer.js","reducers/shop.reducer.js","reducers/transaction.reducer.js","reducers/index.js","index.js"],"names":["imageUrl","server","isAbsoluteURLRegex","axios","interceptors","request","use","a","config","test","url","userToken","localStorage","getItem","headers","join","timeout","response","error","console","log","JSON","stringify","undefined","isCancel","Promise","reject","code","message","httpClient","isLoggedIn","token","decodedToken","jwt","decode","complete","dateNow","Date","exp","getTime","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","sectionDesktop","sectionMobile","grow","withRouter","props","classes","React","useState","anchorEl","setAnchorEl","dispatch","useDispatch","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","history","removeItem","push","className","AppBar","color","position","clsx","IconButton","aria-label","handleDrawerOpen","edge","Typography","variant","noWrap","process","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","bannerOpen","backgroundImage","backgroundColor","isActive","Drawer","paper","handleDrawerClose","src","height","style","alt","Divider","List","ListItem","component","NavLink","to","button","key","activeClassName","ListItemIcon","ListItemText","primary","initialState","result","isFetching","isError","maxWidth","media","LoginPage","loginReducer","useSelector","Card","CardMedia","image","title","CardContent","onSubmit","values","value","setSubmitting","type","post","data","setItem","payload","initialValues","username","password","handleChange","handleSubmit","isSubmitting","setFieldValue","TextField","margin","required","fullWidth","label","onChange","autoComplete","autoFocus","Alert","severity","marginBottom","Button","disabled","submit","CircularProgress","marginTop","Grid","container","justify","Link","RouterLink","showForm","register","goBack","alert","flexDirection","avatar","palette","secondary","main","form","noValidate","name","cancel","gutterBottom","registerActions","TransactionRequest","subtotal","discount","shipping_cost","tax_percent","total","paid","change","order_list","payment_type","payment_detail","staff_id","seller_id","buyer_id","comment","doUpdateOrder","orderLines","totalPrice","item","price","qty","taxAmt","shopReducer","fontSize","field","updateChange","given","mTotalPrice","onClickGiven","newValue","oldValue","newGiven","onClickSubmit","trans","order","getState","then","mOrderLines","isPaymentMade","err","isMustChanged","InputLabelProps","shrink","InputProps","readOnly","startAdornment","InputAdornment","readonly","xs","onClickExact","setStateStockToSuccess","getProducts","doGetProducts","get","stockReducer","star","orderList","flex","maxHeight","orderListItem","productContainer","paymentButton","leftLabel","rightLabel","isSelectedItem","product","indexOf","useEffect","stockActions","Paper","elevation","paddingTop","paddingBottom","mIsPaymentMade","Payment","Container","overflowY","map","i","index","unshift","shopActions","cursor","CardActionArea","product_id","renderProductRows","mTaxAmt","displayType","decimalScale","thousandSeparator","prefix","fixedDecimalScale","mGiven","length","divider","alignitem","alignContent","align","foundIndex","splice","StockCard","minHeight","subtitle","minWidth","createElement","icon","selectedRow","setSelectedRow","openDialog","setOpenDialog","selectedProduct","setSelectedProduct","columns","render","cellStyle","Math","random","borderRadius","stock","suffix","format","created","actions","iconProps","tooltip","rowData","handleDeleteConfirm","delete","handleClose","AddShoppingCartIcon","NewReleasesIcon","AssignmentReturnIcon","StarIcon","onRowClick","evt","options","pageSize","rowStyle","tableData","components","Toolbar","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","card","showPreviewImage","file_obj","formData","FormData","append","file","e","preventDefault","target","files","URL","createObjectURL","click-type","multiple","accept","CardActions","raised","match","params","enableReinitialize","put","chartType","setChartType","chartData","setChartData","getRandomInt","randoms","floor","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOption","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","callback","toString","replace","ButtonGroup","size","setorderList","transactionReducer","catch","transactionColumns","timestamp","parse","orderColumns","clickTransactionRow","search","paging","createMuiTheme","500","status","danger","window","location","hostname","combineReducers","state","middlewares","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","setOpen","SecuredRoute","Component","rest","loginActions","basename","path","RegisterPage","exact","StockPage","StockCreatePage","StockEditPage","ShopPage","ReportPage","TransactionPage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd8dfaa6.chunk.js","sourcesContent":["export const LOGIN_FETCHING = 'LOGIN_FETCHING'\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\n\nexport const LOGOUT = \"LOGOUT\";\n\n// Register Page\nexport const HTTP_REGISTER_FETCHING = \"HTTP_REGISTER_FETCHING\";\nexport const HTTP_REGISTER_SUCCESS = \"HTTP_REGISTER_SUCCESS\";\nexport const HTTP_REGISTER_FAILED = \"HTTP_REGISTER_FAILED\";\n\n// Stock Page\nexport const HTTP_STOCK_FETCHING = \"HTTP_STOCK_FETCHING\";\nexport const HTTP_STOCK_SUCCESS = \"HTTP_STOCK_SUCCESS\";\nexport const HTTP_STOCK_FAILED = \"HTTP_STOCK_FAILED\";\nexport const HTTP_STOCK_CLEAR = \"HTTP_STOCK_CLEAR\";\n\n// Stock Edit Page\nexport const HTTP_STOCK_EDIT_FETCHING = \"HTTP_STOCK_EDIT_FETCHING\";\nexport const HTTP_STOCK_EDIT_SUCCESS = \"HTTP_STOCK_EDIT_SUCCESS\";\nexport const HTTP_STOCK_EDIT_FAILED = \"HTTP_STOCK_EDIT_FAILED\";\nexport const HTTP_STOCK_EDIT_INITIALED = \"HTTP_STOCK_EDIT_INITIALED\";\n\n// Transaction Edit Page\nexport const HTTP_TRANSACTION_FETCHING = \"HTTP_TRANSACTION_FETCHING\";\nexport const HTTP_TRANSACTION_SUCCESS = \"HTTP_TRANSACTION_SUCCESS\";\nexport const HTTP_TRANSACTION_FAILED = \"HTTP_TRANSACTION_FAILED\";\n\n// Shop Page\nexport const HTTP_SHOP_FETCHING = \"HTTP_SHOP_FETCHING\";\nexport const HTTP_SHOP_SUCCESS = \"HTTP_SHOP_SUCCESS\";\nexport const HTTP_SHOP_FAILED = \"HTTP_SHOP_FAILED\";\n\nexport const SHOP_UPDATE_ORDER = \"SHOP_UPDATE_ORDER\";\nexport const SHOP_UPDATE_PAYMENT = \"SHOP_UPDATE_PAYMENT\";\n\n// Error Code\nexport const E_PICKER_CANCELLED = \"E_PICKER_CANCELLED\";\nexport const E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR =\n  \"E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR\";\nexport const E_PERMISSION_MISSING = \"E_PERMISSION_MISSING\";\nexport const E_PICKER_NO_CAMERA_PERMISSION = \"E_PICKER_NO_CAMERA_PERMISSION\";\nexport const E_USER_CANCELLED = \"E_USER_CANCELLED\";\nexport const E_UNKNOWN = \"E_UNKNOWN\";\nexport const E_DEVELOPER_ERROR = \"E_DEVELOPER_ERROR\";\nexport const TIMEOUT_NETWORK = \"ECONNABORTED\"; // request service timeout\nexport const NOT_CONNECT_NETWORK = \"NOT_CONNECT_NETWORK\";\n\n//////////////// Localization Begin ////////////////\nexport const NETWORK_CONNECTION_MESSAGE =\n  \"Cannot connect to server, Please try again.\";\nexport const NETWORK_TIMEOUT_MESSAGE =\n  \"A network timeout has occurred, Please try again.\";\nexport const UPLOAD_PHOTO_FAIL_MESSAGE =\n  \"An error has occurred. The photo was unable to upload.\";\n\nexport const apiUrl = \"http://localhost:8081/api/v2\";\nexport const imageUrl = \"http://localhost:8081\";\n\nexport const server = {\n  LOGIN_URL: `login`,\n  REGISTER_URL: `register`,\n  PRODUCT_URL: `product`,\n  TRANSACTION_URL: `transaction`,\n  REPORT_URL: `report`,\n  TOKEN_KEY: `token`\n};\n","import axios from 'axios'\nimport join from 'url-join'\nimport {server, apiUrl, NOT_CONNECT_NETWORK, NETWORK_CONNECTION_MESSAGE} from '../constants'\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//\n\naxios.interceptors.request.use(async (config) => {\n    if (!isAbsoluteURLRegex.test(config.url)) {\n        const userToken = localStorage.getItem(server.TOKEN_KEY)\n        if (userToken) {\n            config.headers = { 'x-access-token': userToken }\n        }\n        config.url = join(apiUrl, config.url) \n    }\n    config.timeout = 10000 // 10 Second \n    return config\n})\n\naxios.interceptors.response.use((response) => {\n    return response\n}, error => { \n    console.log(JSON.stringify(error, undefined, 2))\n    if (axios.isCancel(error)) {\n        return Promise.reject(error)\n    } else if (!error.response) {\n        return Promise.reject({ code: NOT_CONNECT_NETWORK, message: NETWORK_CONNECTION_MESSAGE })\n    }\n    return Promise.reject(error)\n})\n\nexport const httpClient = axios\n","import { LOGIN_FETCHING, LOGIN_FAILED, LOGIN_SUCCESS } from \"../constants\";\nimport { server } from \"../constants\";\nimport { httpClient } from \"./../utils/HttpClient\";\nimport jwt from \"jsonwebtoken\";\n\n// Information being sent to Reducer\nexport const setLoginStateToFetching = () => ({\n  type: LOGIN_FETCHING\n});\n\nexport const setLoginStateToFailed = () => ({\n  type: LOGIN_FAILED\n});\n\nexport const setLoginStateToSuccess = payload => ({\n  type: LOGIN_SUCCESS,\n  payload\n});\n\n// Called by Login Component\nexport const login = (value, history) => {\n  return async dispatch => {\n    try {\n      dispatch(setLoginStateToFetching()); // fetching\n      let result = await httpClient.post(server.LOGIN_URL, value);\n      if (result.data.result == \"ok\") {\n        localStorage.setItem(server.TOKEN_KEY, result.data.token);\n        dispatch(setLoginStateToSuccess(result));\n        history.push(\"/stock\");\n      } else {\n        dispatch(setLoginStateToFailed());\n      }\n    } catch (error) {\n      dispatch(setLoginStateToFailed());\n    }\n  };\n};\n\nexport const logout = history => {\n  return dispatch => {\n    localStorage.removeItem(server.TOKEN_KEY);\n    history.push(\"/login\");\n  };\n};\n\nexport const isLoggedIn = () => {\n  let token = localStorage.getItem(server.TOKEN_KEY);\n  if (token) {\n    var decodedToken = jwt.decode(token, { complete: true });\n    var dateNow = new Date();\n\n    if (decodedToken.exp < dateNow.getTime()) {\n      // alert(JSON.stringify(decodedToken));\n      return false;\n    } else {\n      // alert(Date(decodedToken.exp).toString());\n      // alert(JSON.stringify(decodedToken));\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as loginActions from \"./../../actions/login.action\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withWidth } from \"@material-ui/core\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  grow: {\n    flexGrow: 1\n  }\n}));\n\nconst Header = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n  const isMenuOpen = Boolean(anchorEl);\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const logout = () => {\n    dispatch(loginActions.logout(props.history));\n    props.history.push(\"/\");\n    handleMenuClose();\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={logout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        color={\n          process.env.REACT_APP_IS_PRODUCTION == 1 ? \"primary\" : \"secondary\"\n        }\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: props.open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: props.open && classes.hide\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            React / NodeJS / Express / MongoDB Workshop - Ver{\" \"}\n            {process.env.REACT_APP_VERSION}\n            <Typography variant=\"body1\"> By CodeMobiles </Typography>\n          </Typography>\n\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={event => setAnchorEl(event.currentTarget)}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ShopIcon from \"@material-ui/icons/Shop\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7)\n  },\n  bannerOpen: {\n    backgroundImage: \"url(\" + \"/images/background_menu.jpg\" + \")\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#1E88E5\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  isActive: {\n    backgroundColor: \"#e0f5fd\",\n    color: \"#0080ff\"\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: props.open,\n        [classes.drawerClose]: !props.open\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: props.open,\n          [classes.bannerOpen]: props.open,\n          [classes.drawerClose]: !props.open\n        })\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={props.handleDrawerClose}>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/logo_white.png`}\n            height=\"30\"\n          />\n          <ChevronLeftIcon style={{ color: \"white\" }} />\n        </IconButton>\n      </div>\n      {props.open && (\n        <img\n          height={250}\n          src={`${process.env.PUBLIC_URL}/images/menu_banner.jpg`}\n          alt=\"\"\n        />\n      )}\n      <Divider />\n\n      <List>\n        {/* Shop */}\n        <ListItem\n          component={NavLink}\n          to=\"/shop\"\n          button\n          key=\"shop\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <ShopIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Shop\" />\n        </ListItem>\n\n        {/* Stock */}\n        <ListItem\n          component={NavLink}\n          to=\"/stock\"\n          button\n          key=\"stock\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <LayersIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Stock\" />\n        </ListItem>\n\n        {/* Report */}\n        <ListItem\n          component={NavLink}\n          to=\"/report\"\n          button\n          key=\"report\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Report\" />\n        </ListItem>\n\n        {/* Transaction */}\n        <ListItem\n          component={NavLink}\n          to=\"/transaction\"\n          button\n          key=\"transaction\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <AttachMoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Transaction\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n","import { LOGIN_FETCHING, LOGIN_SUCCESS, LOGIN_FAILED } from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case LOGIN_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case LOGIN_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n\n    default:\n      return state;\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport * as loginActions from \"./../../../actions/login.action\";\nimport loginReducer from \"../../../reducers/login.reducer\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 240\n  }\n});\n\nconst LoginPage = props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return (\n      <form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"password\"\n          label=\"Password\"\n          onChange={handleChange}\n          value={values.password}\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n\n        {loginReducer.isError && (\n          <Alert severity=\"error\" style={{ marginBottom: 8 }}>\n            Invalid Account\n          </Alert>\n        )}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n\n        {isSubmitting && <CircularProgress style={{ marginTop: 10 }} />}\n\n        <Grid container justify=\"flex-end\">\n          <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n            Register\n          </Link>\n        </Grid>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\n        title=\"Contemplative Reptile\"\n      />\n\n      <CardContent>\n        <Typography variant=\"h4\">Login</Typography>\n        {/* HOC */}\n        <Formik\n          onSubmit={(values, { setSubmitting }) => {\n            // alert(JSON.stringify(values));\n            dispatch(loginActions.login(values, props.history));\n            setSubmitting(false);\n          }}\n          initialValues={{ username: \"\", password: \"\" }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LoginPage;\n","import { REGISTER_FETCHING, server } from \"../constants\";\nimport { httpClient } from \"./../utils/HttpClient\";\n\nexport const register = async (values, history) => {\n  let result = await httpClient.post(server.REGISTER_URL, values);\n  console.log(JSON.stringify(result.data));\n  if (result.data.result == \"ok\") {\n    history.goBack();\n  } else {\n    alert(\"Invalid username or password\");\n  }\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as registerActions from \"./../../../actions/register.action\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default props => {\n  console.log(\"Register\");\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isSubmitting}\n        >\n          Create\n        </Button>\n        <Button\n          onClick={() => props.history.goBack()}\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"default\"\n          className={classes.cancel}\n        >\n          Cancel\n        </Button>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"240\"\n        image=\"https://material-ui.com/static/images/cards/contemplative-reptile.jpg\"\n        title=\"Contemplative Reptile\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Register\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            //alert(JSON.stringify(values));\n            dispatch(registerActions.register(values, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n","export class TransactionRequest {\n    subtotal = 0;\n    discount = 0;\n    shipping_cost = 0;\n    tax_percent = 0;\n    total = 0;\n    paid = 0;\n    change = 0;\n    order_list = \"x\";\n    payment_type = \"x\";\n    payment_detail = \"x\";\n    staff_id = \"x\";\n    seller_id = \"x\";\n    buyer_id = \"x\";\n    comment = \"x\";\n}","import { httpClient } from \"./../utils/HttpClient\";\n\nimport { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT, server } from \"../constants\";\n\nconst setStateShoptoUpdateOrder = payload => ({\n  type: SHOP_UPDATE_ORDER,\n  payload: payload\n});\n\nconst doUpdateOrder = (dispatch, orderLines) => {\n  let totalPrice = 0;\n  let taxAmt = 0;\n  for (let item of orderLines) {\n    totalPrice += item.price * item.qty;\n  }\n  taxAmt = totalPrice * 0.07;\n\n  dispatch(\n    setStateShoptoUpdateOrder({\n      orderLines,\n      totalPrice,\n      taxAmt\n    })\n  );\n};\n\nexport const addOrder = item => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    let index = orderLines.indexOf(item);\n    if (index === -1) {\n      item.qty = 1;\n      orderLines.unshift(item);\n    } else {\n      orderLines[index].qty++;\n    }\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const removeOrder = product => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    var foundIndex = orderLines.indexOf(product);\n\n    orderLines.map(item => {\n      if (item.product_id == product.product_id) {\n        item.qty = 1;\n      }\n    });\n    orderLines.splice(foundIndex, 1);\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const submitPayment = data => {\n  return (dispatch, getState) => {\n    httpClient.post(server.TRANSACTION_URL, data).then(() => {\n      // Clear payment\n      getState().shopReducer.mOrderLines = [];\n      dispatch({\n        type: SHOP_UPDATE_PAYMENT,\n        payload: {\n          isPaymentMade: false,\n          given: 0\n        }\n      });\n    });\n  };\n};\n\nexport const togglePaymentState = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SHOP_UPDATE_PAYMENT,\n      payload: {\n        isPaymentMade: !getState().shopReducer.mIsPaymentMade,\n        given: !getState().shopReducer.mGiven\n      }\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TransactionRequest } from \"./../../../models/transaction\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CardHeader } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const dispatch = useDispatch();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      padding: 30\n    },\n    button: {\n      height: 100,\n      fontSize: 20\n    },\n    field: {\n      marginTop: 16\n    }\n  }));\n\n  const classes = useStyles();\n\n  const isMustChanged = values => {\n    try {\n      return values.given > shopReducer.mTotalPrice;\n    } catch (err) {\n      return false;\n    }\n  };\n\n  const updateChange = (given, setFieldValue) => {\n    let change = given - shopReducer.mTotalPrice;\n    if (change > 0) {\n      setFieldValue(\"change\", change);\n    } else {\n      setFieldValue(\"change\", 0);\n    }\n  };\n\n  const onClickGiven = (newValue, oldValue, setFieldValue) => {\n    const newGiven = newValue + oldValue;\n    setFieldValue(\"given\", newGiven);\n    updateChange(newGiven, setFieldValue);\n  };\n\n  const onClickExact = setFieldValue => {\n    setFieldValue(\"given\", shopReducer.mTotalPrice);\n    updateChange(0, setFieldValue);\n  };\n\n  const onClickSubmit = values => {\n    let trans = new TransactionRequest();\n    trans.total = shopReducer.mTotalPrice;\n    trans.paid = values.given;\n    trans.change = values.change;\n    trans.payment_type = \"cash\";\n    trans.payment_detail = \"full\";\n    trans.seller_id = \"sr0001\";\n    trans.buyer_id = \"by0000\";\n    trans.order_list = props.order;\n    dispatch(shopActions.submitPayment(trans));\n  };\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        {isMustChanged(values) && (\n          <Field\n            variant=\"outlined\"\n            className={classes.field}\n            fullWidth\n            InputLabelProps={{\n              shrink: true\n            }}\n            component={TextField}\n            name=\"change\"\n            type=\"text\"\n            label=\"Change\"\n            InputProps={{\n              style: { fontSize: 35 },\n              readOnly: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">THB</InputAdornment>\n              )\n            }}\n          />\n        )}\n\n        <Field\n          readonly\n          variant=\"outlined\"\n          className={classes.field}\n          fullWidth\n          component={TextField}\n          name=\"given\"\n          type=\"text\"\n          label=\"Given\"\n          InputProps={{\n            style: { fontSize: 35, color: \"green\" },\n            readOnly: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">THB</InputAdornment>\n            )\n          }}\n        />\n\n        <div style={{ marginTop: 32 }}>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(1000, values.given, setFieldValue)}\n              >\n                ฿1,000\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(500, values.given, setFieldValue)}\n              >\n                ฿500\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(100, values.given, setFieldValue)}\n              >\n                ฿100\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(50, values.given, setFieldValue)}\n              >\n                ฿50\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(20, values.given, setFieldValue)}\n              >\n                ฿20\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(10, values.given, setFieldValue)}\n              >\n                ฿10\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"danger\"\n                onClick={() => setFieldValue(\"given\", 0)}\n              >\n                CLR\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickExact(setFieldValue)}\n              >\n                EXACT\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => onClickSubmit(values)}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Form>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik initialValues={{ given: 0 }}>{props => showForm(props)}</Formik>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\nimport {\n  HTTP_STOCK_SUCCESS,\n  HTTP_STOCK_FETCHING,\n  HTTP_STOCK_FAILED,\n  server,\n  HTTP_STOCK_CLEAR\n} from \"../constants\";\n\nexport const setStateStockToSuccess = payload => ({\n  type: HTTP_STOCK_SUCCESS,\n  payload\n});\n\nconst setStateStockToFetching = () => ({\n  type: HTTP_STOCK_FETCHING\n});\n\nconst setStateStockToFailed = () => ({\n  type: HTTP_STOCK_FAILED\n});\n\nconst setStateStockToClear = () => ({\n  type: HTTP_STOCK_CLEAR\n});\n\nexport const getProducts = () => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    doGetProducts(dispatch);\n  };\n};\n\nconst doGetProducts = async dispatch => {\n  try {\n    let result = await httpClient.get(server.PRODUCT_URL);\n    dispatch(setStateStockToSuccess(result.data));\n  } catch (err) {\n    alert(JSON.stringify(err));\n    dispatch(setStateStockToFailed());\n  }\n};\n\nexport const addProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.post(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const updateProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.put(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const getProductById = id => {\n  return async dispatch => {\n    try {\n      dispatch(setStateStockToFetching());\n      let result = await httpClient.get(`${server.PRODUCT_URL}/id/${id}`);\n      dispatch(setStateStockToSuccess(result.data));\n    } catch (error) {\n      alert(JSON.stringify(error));\n      dispatch(setStateStockToFailed());\n    }\n  };\n};\n\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    await httpClient.delete(`${server.PRODUCT_URL}/id/${id}`);\n    await doGetProducts(dispatch);\n  };\n};\n\nexport const getProductByKeyword = event => {\n  return async dispatch => {\n    var keyword = event.target.value;\n    dispatch(setStateStockToFetching());\n\n    if (keyword !== null && keyword != \"\") {\n      let result = await httpClient.get(\n        `${server.PRODUCT_URL}/name/${keyword}`\n      );\n      dispatch(setStateStockToSuccess(result.data));\n    } else {\n      doGetProducts(dispatch);\n    }\n  };\n};\n","import \"./ShopPage.css\"; // Tell Webpack that Button.js uses these styles\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Payment from \"./../../fragments/Payment/Payment\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { imageUrl } from \"./../../../constants\";\nimport NumberFormat from \"react-number-format\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n\n  const dispatch = useDispatch();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: \"100%\",\n      marginTop: 55\n    },\n    star: {\n      color: \"red\"\n    },\n    orderList: {\n      overflowX: \"hidden\",\n      height: 490,\n      flex: 1,\n      width: \"100%\",\n      maxHeight: 490\n    },\n    orderListItem: {\n      height: 100,\n      maxHeight: 100\n    },\n    productContainer: {\n      height: 720\n    },\n    paymentButton: {\n      height: 95,\n      marginTop: 24\n    },\n    leftLabel: {\n      marginLeft: 20\n    },\n    rightLabel: {\n      marginRight: 20\n    }\n  }));\n\n  const classes = useStyles();\n\n  const renderPayment = () => {\n    return (\n      <div className=\"col-md-8\" style={{ maxHeight: 710 }}>\n        <Payment order={JSON.stringify(shopReducer.mOrderLines)} />\n      </div>\n    );\n  };\n\n  const isSelectedItem = product => {\n    let index = shopReducer.mOrderLines.indexOf(product);\n    return index != -1;\n  };\n\n  const renderOrderRows = () => {\n    const { mOrderLines } = shopReducer;\n\n    return mOrderLines.map(item => (\n      <ListItem button divider className={classes.orderListItem}>\n        <Grid container key={item.product_id} spacing={1}>\n          {/* Image Order  */}\n          <Grid item xs={2}>\n            <img\n              alt=\"to be done\"\n              src={`${imageUrl}/images/${item.image}`}\n              style={{ height: 90, width: 90 }}\n            />\n          </Grid>\n          {/* Name Order  */}\n          <Grid item xs={8} alignitem=\"center\">\n            <Typography\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ maxHeight: 50, marginLeft: 32 }}\n            >\n              {item.name}\n            </Typography>\n          </Grid>\n          {/* Price and Qty Order  */}\n          <Grid item xs={2} alignContent=\"center\">\n            <Typography align=\"right\" color=\"textPrimary\">\n              <NumberFormat\n                value={item.price}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                decimalScale={2}\n                fixedDecimalScale={true}\n                prefix={\"฿\"}\n              />\n              <br />X {item.qty}.\n              <br />\n              <DeleteOutlineIcon\n                onClick={() => dispatch(shopActions.removeOrder(item))}\n              />\n            </Typography>\n          </Grid>\n        </Grid>\n      </ListItem>\n    ));\n  };\n\n  const renderProductRows = () => {\n    const { result } = stockReducer;\n    return (\n      <Container style={{ height: \"100%\", overflowY: \"scroll\" }}>\n        <Grid container spacing={1} className={classes.productContainer}>\n          {result != null &&\n            result.map((item, i) => (\n              <Grid\n                key={i}\n                item\n                xs={3}\n                onClick={() => dispatch(shopActions.addOrder(item))}\n                style={{ cursor: \"pointer\" }}\n              >\n                <Card>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"Contemplative Reptile\"\n                      height=\"200\"\n                      image={`${imageUrl}/images/${item.image}`}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography noWrap gutterBottom>\n                        {item.name}\n                      </Typography>\n                      <Grid container style={{ height: 24 }}>\n                        <Grid item xs={10}>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            D{item.product_id} / ฿{item.price}\n                          </Typography>\n                        </Grid>\n                        {isSelectedItem(item) && (\n                          <Grid item xs={2}>\n                            <StarsIcon className={classes.star} />\n                          </Grid>\n                        )}\n                      </Grid>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </Container>\n    );\n  };\n\n  const renderPR = () => {\n    return (\n      <Container>\n        <Grid container spacing={3}>\n          {stockReducer.result &&\n            stockReducer.result.map(item => (\n              <Grid item xs={3}>\n                <Card>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"Contemplative Reptile\"\n                      height=\"200\"\n                      image={`${imageUrl}/images/${item.image}`}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography noWrap gutterBottom>\n                        {item.name}\n                      </Typography>\n                      <Grid container style={{ height: 24 }}>\n                        <Grid item xs={10}>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            D{item.product_id} / ฿{item.price}\n                          </Typography>\n                        </Grid>\n                        {isSelectedItem(item) && (\n                          <Grid item xs={2}>\n                            <StarsIcon className={classes.star} />\n                          </Grid>\n                        )}\n                      </Grid>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </Container>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {/* Left section */}\n        <Grid item xs={8}>\n          <Paper\n            elevation={1}\n            style={{\n              paddingTop: 24,\n              paddingBottom: 24,\n              backgroundColor: \"#e0f5fd\"\n            }}\n          >\n            {shopReducer.mIsPaymentMade ? renderPayment() : renderProductRows()}\n          </Paper>\n        </Grid>\n        {/* <Grid item xs={8}>\n          {renderPR()}\n        </Grid> */}\n        {/* Right section */}\n        <Grid item xs={4}>\n          <div\n            style={{\n              maxWidth: \"100%\"\n            }}\n          >\n            <Paper style={{ paddingTop: 16, marginTop: 8 }} elevation={1}>\n              {/* Tax section */}\n              <Grid\n                container\n                justify=\"space-between\"\n                style={{ marginBottom: 24 }}\n              >\n                <Typography variant=\"h3\" className={classes.leftLabel}>\n                  Tax 7%\n                </Typography>\n                <Typography\n                  variant=\"h3\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTaxAmt}\n                    displayType={\"text\"}\n                    decimalScale={2}\n                    thousandSeparator={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {/* Total section */}\n              <Grid container justify=\"space-between\">\n                <Typography variant=\"h3\" className={classes.leftLabel}>\n                  Total\n                </Typography>\n                <Typography\n                  variant=\"h3\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTotalPrice}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              <Button\n                className={classes.paymentButton}\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={\n                  !(shopReducer.mTotalPrice > 0) && !shopReducer.mIsPaymentMade\n                }\n                onClick={() => dispatch(shopActions.togglePaymentState())}\n              >\n                <Typography variant=\"h3\">Payment</Typography>\n              </Button>\n            </Paper>\n\n            <Paper\n              elevation={1}\n              style={{\n                height: 490,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {shopReducer.mOrderLines.length > 0 ? (\n                <List\n                  component=\"nav\"\n                  className={classes.orderList}\n                  aria-label=\"mailbox folders\"\n                >\n                  {renderOrderRows()}\n                </List>\n              ) : (\n                <img\n                  src={`${process.env.PUBLIC_URL}/images/waiting_for_sale.png`}\n                  style={{ height: 300, width: 300 }}\n                />\n              )}\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Typography, Grid, CardContent } from \"@material-ui/core\";\n\nconst StockCard = props => {\n  return (\n    <Card>\n      <Grid container style={{ minHeight: 70 }}>\n        <Grid item style={{ flexGrow: 1, padding: 24 }}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {props.subtitle}\n          </Typography>\n        </Grid>\n\n        <Grid\n          item\n          style={{\n            backgroundColor: props.color,\n            color: \"white\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            minWidth: 75\n          }}\n        >\n          {React.createElement(props.icon, { fontSize: \"large\" })}\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { imageUrl } from \"./../../../constants\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport StockCard from \"./../../fragments/StockCard/StockCard\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport AssignmentReturnIcon from \"@material-ui/icons/AssignmentReturn\";\nimport StarIcon from \"@material-ui/icons/Star\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 60\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  const columns = [\n    {\n      title: \"ID\",\n      field: \"product_id\",\n      render: item => <Typography variant=\"body1\">{item.product_id}</Typography>\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: item => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{ width: 70, height: 70, borderRadius: \"5%\" }}\n        />\n      )\n    },\n    {\n      title: \"NAME\",\n      field: \"name\",\n      cellStyle: { minWidth: 700 },\n      render: item => <Typography variant=\"body1\">{item.name}</Typography>\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"CREATED\",\n      field: \"created\",\n      render: item => (\n        <Typography>\n          <Moment format=\"DD/MM/YYYY\">{item.created}</Moment>\n        </Typography>\n      )\n    }\n  ];\n\n  const actions = [\n    {\n      icon: \"edit\",\n      iconProps: { color: \"primary\" },\n      tooltip: \"Edit\",\n      onClick: (event, rowData) =>\n        props.history.push(\"/stock/edit/\" + rowData.product_id)\n    },\n    {\n      icon: \"delete\",\n      iconProps: { color: \"action\" },\n      tooltip: \"Delete\",\n      onClick: (event, rowData) => {\n        setSelectedProduct(rowData);\n        setOpenDialog(true);\n      }\n    }\n  ];\n\n  const handleDeleteConfirm = () => {\n    dispatch(stockActions.deleteProduct(selectedProduct.product_id));\n    dispatch(stockActions.getProducts());\n    setOpenDialog(false);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const showDialog = () => {\n    if (selectedProduct == null) {\n      return \"\";\n    }\n\n    return (\n      <Dialog\n        open={openDialog}\n        keepMounted\n        onClose={() => {}}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          <img\n            src={`${imageUrl}/images/${\n              selectedProduct.image\n            }?dummy=${Math.random()}`}\n            style={{ width: 100, borderRadius: \"5%\" }}\n          />\n          <br />\n          Confirm to delete the product? : {\" \" + selectedProduct.name}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            You cannot restore deleted product.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteConfirm} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container style={{ marginBottom: 16 }} spacing={5}>\n        <Grid item xs>\n          <StockCard\n            icon={AddShoppingCartIcon}\n            title=\"TOTAL\"\n            subtitle=\"112 THB\"\n            color=\"#00a65a\"\n          />\n        </Grid>\n\n        <Grid item xs>\n          <StockCard\n            icon={NewReleasesIcon}\n            title=\"EMPTY\"\n            subtitle=\"9 PCS.\"\n            color=\"#f39c12\"\n          />\n        </Grid>\n\n        <Grid item xs>\n          <StockCard\n            icon={AssignmentReturnIcon}\n            title=\"RETURN\"\n            subtitle=\"1 PCS.\"\n            color=\"#dd4b39\"\n          />\n        </Grid>\n\n        <Grid item xs>\n          <StockCard\n            icon={StarIcon}\n            title=\"DISCOUNT\"\n            subtitle=\"5 PCS.\"\n            color=\"#00c0ef\"\n          />\n        </Grid>\n      </Grid>\n      <MaterialTable\n        id=\"root_stock\"\n        title=\"Stock\"\n        columns={columns}\n        actions={actions}\n        data={stockReducer.result ? stockReducer.result : []}\n        onRowClick={(evt, selectedRow) => setSelectedRow(selectedRow)}\n        options={{\n          pageSize: 5,\n          rowStyle: rowData => ({\n            backgroundColor:\n              selectedRow && selectedRow.tableData.id === rowData.tableData.id\n                ? \"#EEE\"\n                : \"#FFF\"\n          })\n        }}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <div style={{ padding: \"0px 10px\" }}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component={Link}\n                  to=\"/stock/create\"\n                >\n                  Create\n                </Button>\n              </div>\n            </div>\n          )\n        }}\n      />\n\n      {/* Dialog */}\n      {showDialog()}\n    </div>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Formik, Form, Field } from \"formik\";\n\nimport {\n  fieldToTextField,\n  TextField,\n  TextFieldProps,\n  Select,\n  Switch\n} from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CardHeader } from \"@material-ui/core\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100\n  },\n  field: {\n    marginTop: 16\n  },\n  card: {\n    padding: 20\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Create Stock\n            </Typography>\n            <Button\n              onClick={() => {\n                setFieldValue(\"name\", \"\");\n                setFieldValue(\"stock\", 0);\n                setFieldValue(\"price\", 0);\n                setFieldValue(\"file\", null);\n                setFieldValue(\"file_obj\", null);\n              }}\n            >\n              RESET\n            </Button>\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={e => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = values => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          initialValues={{ name: \"\", stock: 10, price: 90 }}\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            formData.append(\"image\", values.file);\n            dispatch(stockActions.addProduct(formData, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { imageUrl } from \"./../../../constants\";\n\nimport { Formik, Form, Field } from \"formik\";\n\nimport {\n  fieldToTextField,\n  TextField,\n  TextFieldProps,\n  Select,\n  Switch\n} from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { CardHeader } from \"@material-ui/core\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100\n  },\n  field: {\n    marginTop: 16\n  },\n  card: {\n    padding: 20\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n\n  useEffect(() => {\n    let id = props.match.params.id;\n    dispatch(stockActions.getProductById(id));\n  }, []);\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <Typography gutterBottom variant=\"h3\" style={{ flexGrow: 1 }}>\n                Edit Stock\n              </Typography>\n              <Button\n                onClick={() => {\n                  setFieldValue(\"name\", \"\");\n                  setFieldValue(\"stock\", 0);\n                  setFieldValue(\"price\", 0);\n                  setFieldValue(\"file\", null);\n                  setFieldValue(\"file_obj\", null);\n                }}\n              >\n                RESET\n              </Button>\n            </div>\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={e => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n  const showPreviewImage = values => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    } else if (values.image) {\n      return (\n        <img\n          src={`${imageUrl}/images/${values.image}`}\n          style={{ height: 100 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          initialValues={\n            stockReducer.result\n              ? stockReducer.result\n              : { name: \"\", stock: 0, price: 0 }\n          }\n          enableReinitialize\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"product_id\", values.product_id);\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            if (values.file) {\n              formData.append(\"image\", values.file);\n            }\n\n            dispatch(stockActions.updateProduct(formData, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, ButtonGroup, IconButton } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 100,\n    backgroundColor: \"white\",\n    padding: 24\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const [chartType, setChartType] = useState(\"bar\");\n  const [chartData, setChartData] = useState([]);\n\n  const getRandomInt = () => {\n    let randoms = [];\n    for (let index = 0; index < 8; index++) {\n      randoms.push(Math.floor(Math.random() * (50000 - 5 + 1)) + 5);\n    }\n    return randoms;\n  };\n\n  const data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Revenue 2018\",\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 99, 132, 0.2)\"\n        ],\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData\n      },\n      {\n        label: \"Revenue 2018\",\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 99, 132, 0.2)\"\n        ],\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: getRandomInt()\n      }\n    ]\n  };\n\n  const chartOption = {\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function(value, index, values) {\n              return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  useEffect(() => {\n    setChartData(getRandomInt());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Sale Chart</Typography>\n      <ButtonGroup\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"large outlined primary button group\"\n      >\n        <Button\n          variant={chartType == \"bar\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"bar\")}\n        >\n          Bar\n        </Button>\n        <Button\n          variant={chartType == \"line\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"line\")}\n        >\n          Line\n        </Button>\n        <Button\n          variant={chartType == \"pie\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"pie\")}\n        >\n          Pie\n        </Button>\n      </ButtonGroup>\n      <IconButton\n        aria-label=\"refresh\"\n        onClick={() => {\n          setChartData(getRandomInt());\n        }}\n      >\n        <RefreshIcon />\n      </IconButton>\n      <div style={{ height: 500 }}>\n        {chartType === \"line\" && (\n          <Line data={data} width=\"100%\" options={chartOption} />\n        )}\n        {chartType === \"pie\" && (\n          <Pie data={data} width=\"100%\" options={chartOption} />\n        )}\n        {chartType === \"bar\" && (\n          <Bar data={data} width=\"100%\" options={chartOption} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport * as transactionActions from \"./../../../actions/transaction.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { imageUrl } from \"./../../../constants\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 55\n  },\n  star: {\n    color: \"red\"\n  },\n  orderList: {\n    overflowX: \"hidden\",\n    height: 490,\n    flex: 1,\n    width: \"100%\",\n    maxHeight: 490\n  },\n  orderListItem: {\n    height: 100,\n    maxHeight: 100\n  },\n  productContainer: {\n    height: 720\n  },\n  paymentButton: {\n    height: 95\n  }\n}));\n\nexport default props => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [orderList, setorderList] = useState([]);\n\n  const transactionReducer = useSelector(\n    ({ transactionReducer }) => transactionReducer\n  );\n\n  useEffect(() => {\n    dispatch(transactionActions.getTransactions());\n  }, []);\n\n  const transactionColumns = [\n    {\n      title: \"ID\",\n      field: \"transaction_id\"\n    },\n\n    {\n      title: \"DATE\",\n      render: item => <Moment format=\"YYYY/MM/DD\">{item.timestamp}</Moment>\n    },\n    {\n      title: \"TIME\",\n      render: item => <Moment format=\"HH:mm\">{item.timestamp}</Moment>\n    },\n    {\n      title: \"STAFF\",\n      field: \"staff_id\"\n    },\n    {\n      title: \"TOTAL\",\n      render: item => (\n        <NumberFormat\n          value={item.total}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"฿\"}\n        />\n      )\n    },\n    {\n      title: \"PAID\",\n      render: item => (\n        <NumberFormat\n          value={item.paid}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"฿\"}\n        />\n      )\n    },\n    {\n      title: \"#SKU\",\n      render: item => (\n        <Typography>{JSON.parse(item.order_list).length} SKU</Typography>\n      )\n    },\n    {\n      title: \"WAY\",\n      field: \"payment_type\"\n    }\n  ];\n\n  const orderColumns = [\n    {\n      title: \"ID\",\n      field: \"product_id\",\n      render: item => <Typography variant=\"body1\">{item.product_id}</Typography>\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: item => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{ width: 80, height: 80, borderRadius: \"5%\" }}\n        />\n      )\n    },\n    {\n      title: \"NAME\",\n      cellStyle: { minWidth: 400 },\n      field: \"name\",\n      render: item => <Typography variant=\"body1\">{item.name}</Typography>\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      )\n    }\n  ];\n\n  const clickTransactionRow = data => {\n    setSelectedRow(data);\n    setorderList(JSON.parse(data.order_list));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={6}>\n          <MaterialTable\n            id=\"root_stock\"\n            title=\"Stock\"\n            columns={transactionColumns}\n            data={transactionReducer.result ? transactionReducer.result : []}\n            onRowClick={(evt, data) => clickTransactionRow(data)}\n            options={{\n              pageSize: 10,\n              rowStyle: rowData => ({\n                backgroundColor:\n                  selectedRow &&\n                  selectedRow.tableData.id === rowData.tableData.id\n                    ? \"#EEE\"\n                    : \"#FFF\"\n              })\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={6}>\n          <MaterialTable\n            title=\"Order List\"\n            columns={orderColumns}\n            data={orderList}\n            options={{\n              search: false,\n              paging: false\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\n\nimport {\n  HTTP_TRANSACTION_SUCCESS,\n  HTTP_TRANSACTION_FETCHING,\n  HTTP_TRANSACTION_FAILED,\n  server\n} from \"./../constants\";\n\nconst setStateTransactionToSuccess = payload => ({\n  type: HTTP_TRANSACTION_SUCCESS,\n  payload: payload\n});\n\nconst setStateTransactionToFetching = () => ({\n  type: HTTP_TRANSACTION_FETCHING\n});\n\nconst setStateTransactionToFailed = () => ({\n  type: HTTP_TRANSACTION_FAILED\n});\n\nexport const getTransactions = () => {\n  setStateTransactionToFetching();\n  return dispatch => {\n    httpClient\n      .get(server.TRANSACTION_URL)\n      .then(result => {\n        dispatch(setStateTransactionToSuccess(result.data));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(setStateTransactionToFailed());\n      });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"./components/layouts/Header\";\nimport Menu from \"./components/layouts/Menu\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport LoginPage from \"./components/pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/pages/RegisterPage/RegisterPage\";\nimport ShopPage from \"./components/pages/ShopPage/ShopPage\";\nimport StockPage from \"./components/pages/StockPage/StockPage\";\nimport StockCreatePage from \"./components/pages/StockCreatePage/StockCreatePage\";\nimport StockEditPage from \"./components/pages/StockEditPage/StockEditPage\";\nimport ReportPage from \"./components/pages/ReportPage/ReportPage\";\nimport TransactionPage from \"./components/pages/TransactionPage/TransactionPage\";\nimport * as loginActions from \"./actions/login.action\";\nimport { server } from \"./constants\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(3)\n  }\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { 500: \"#1E88E5\" }\n  },\n  status: {\n    danger: \"orange\"\n  }\n});\n\nexport default function App() {\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n\n  // Protected Route\n  const SecuredRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n\n  const LoginRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Redirect to=\"/stock\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n\n  // const isLoggedIn = () => {\n  //   return localStorage.getItem(server.TOKEN_KEY) ? true : false;\n  // };\n\n  return (\n    <Router basename={process.env.REACT_APP_IS_PRODUCTION == 1 ? \"/demo\" : \"\"}>\n      <Switch>\n        <div className={classes.root}>\n          {loginActions.isLoggedIn() && (\n            <Header handleDrawerOpen={handleDrawerOpen} />\n          )}\n          {loginActions.isLoggedIn() && <Menu open={open} />}\n          <Container className={classes.content} maxWidth={false}>\n            <LoginRoute path=\"/login\" component={LoginPage} />\n            <Route path=\"/register\" component={RegisterPage} />\n            <SecuredRoute exact={true} path=\"/stock\" component={StockPage} />\n            <SecuredRoute path=\"/stock/create\" component={StockCreatePage} />\n            <SecuredRoute path=\"/stock/edit/:id\" component={StockEditPage} />\n            <SecuredRoute path=\"/shop\" component={ShopPage} />\n            <SecuredRoute path=\"/report\" component={ReportPage} />\n            <SecuredRoute path=\"/transaction\" component={TransactionPage} />\n            <Route\n              exact={true}\n              path=\"/\"\n              component={() => <Redirect to=\"/login\" />}\n            />\n            {/* The Default not found component */}\n            {/* <Route render={props => <Redirect to=\"/login\" />} /> */}\n          </Container>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  HTTP_STOCK_SUCCESS,\n  HTTP_STOCK_FETCHING,\n  HTTP_STOCK_FAILED,\n  HTTP_STOCK_CLEAR\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case HTTP_STOCK_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case HTTP_STOCK_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case HTTP_STOCK_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT } from \"../constants\";\n\nconst initialState = {\n  mOrderLines: [],\n  mTotalPrice: 0,\n  mTaxAmt: 0,\n  mIsPaymentMade: false,\n  mGiven: 0\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SHOP_UPDATE_ORDER:\n      return {\n        ...state,\n        mOrderLines: payload.orderLines,\n        mTotalPrice: payload.totalPrice,\n        mTaxAmt: payload.taxAmt\n      };\n    case SHOP_UPDATE_PAYMENT:\n      return {\n        ...state,\n        mIsPaymentMade: payload.isPaymentMade,\n        mGiven: payload.given\n      };\n    default:\n      return state;\n  }\n};\n","import {\n    HTTP_TRANSACTION_SUCCESS,\n    HTTP_TRANSACTION_FETCHING,\n    HTTP_TRANSACTION_FAILED,\n  } from \"./../constants\";\n  \n  const initialState = {\n    result: null,\n    isFetching: false,\n    isError: false,  \n  };\n  \n  export default (state = initialState, { type, payload }) => {\n    switch (type) {\n      case HTTP_TRANSACTION_SUCCESS:        \n        return { ...state, result: payload, isFetching: false, isError: false };\n      case HTTP_TRANSACTION_FAILED:\n        return { ...state, result: null, isFetching: false, isError: true };\n      case HTTP_TRANSACTION_FETCHING:\n        return { ...state, result: null, isFetching: true, isError: false };\n      default:\n        return state;\n    }\n  };\n  ","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login.reducer\";\nimport stockReducer from \"./stock.reducer\";\nimport shopReducer from \"./shop.reducer\";\nimport transactionReducer from \"./transaction.reducer\";\n\nexport default combineReducers({\n  loginReducer,\n  stockReducer,\n  shopReducer,\n  transactionReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = null;\n\nif (process.env.REACT_APP_IS_PRODUCTION == 1) {\n  middlewares = applyMiddleware(thunk);\n} else {\n  middlewares = applyMiddleware(thunk, logger);\n}\n\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}